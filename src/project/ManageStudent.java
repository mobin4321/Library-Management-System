package project;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

public class ManageStudent extends javax.swing.JFrame {

    public ManageStudent() throws SQLException {

        initComponents();
        ManageLibParks lp = new ManageLibParks();
        lp.timechecker();
        Vip v = new Vip();
        v.vipended();
        Defaulter d = new Defaulter();
        d.addstudent();
        printtable();
        idfield.setText("");
        fnamefield.setText("");
        lnamefield.setText("");
        radio1.setSelected(false);
        radio2.setSelected(false);
        numberfield.setText("");
        addressfield.setText("");
        emailfield.setText("");
        passwordfield.setText("");
        idfield.setEnabled(false);
        fillbtn.setEnabled(false);
        addbtn.setEnabled(true);
        updatebtn.setEnabled(false);
        removebtn.setEnabled(false);
        fnamefield.setEditable(true);
        lnamefield.setEditable(true);
        numberfield.setEditable(true);
        emailfield.setEditable(true);
        passwordfield.setEditable(true);
        addressfield.setEditable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        addradio = new javax.swing.JRadioButton();
        updateradio = new javax.swing.JRadioButton();
        removeradio = new javax.swing.JRadioButton();
        jTextField2 = new javax.swing.JTextField();
        idfield = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        gender1 = new javax.swing.JTextField();
        fillbtn = new javax.swing.JButton();
        fnamefield = new javax.swing.JTextField();
        addressfield = new javax.swing.JTextField();
        radio1 = new javax.swing.JRadioButton();
        radio2 = new javax.swing.JRadioButton();
        lnamefield = new javax.swing.JTextField();
        numberfield = new javax.swing.JTextField();
        emailfield = new javax.swing.JTextField();
        removebtn = new javax.swing.JButton();
        addbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        passwordfield = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        searchbar = new javax.swing.JTextField();
        combobox = new javax.swing.JComboBox<>();
        searchbutton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(252, 134, 54), 3));

        buttonGroup1.add(addradio);
        addradio.setForeground(new java.awt.Color(255, 255, 255));
        addradio.setSelected(true);
        addradio.setText("A D D");
        addradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addradioActionPerformed(evt);
            }
        });

        buttonGroup1.add(updateradio);
        updateradio.setForeground(new java.awt.Color(255, 255, 255));
        updateradio.setText("U P D A T E");
        updateradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateradioActionPerformed(evt);
            }
        });

        buttonGroup1.add(removeradio);
        removeradio.setForeground(new java.awt.Color(255, 255, 255));
        removeradio.setText("R E M O V E");
        removeradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeradioActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(51, 51, 51));
        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("Last Name:");
        jTextField2.setBorder(null);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        idfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idfieldActionPerformed(evt);
            }
        });

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(51, 51, 51));
        jTextField4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(255, 255, 255));
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("Student I.D:");
        jTextField4.setBorder(null);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.setEditable(false);
        jTextField5.setBackground(new java.awt.Color(51, 51, 51));
        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(255, 255, 255));
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("First Name:");
        jTextField5.setBorder(null);
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(51, 51, 51));
        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(255, 255, 255));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField6.setText("Phone Number:");
        jTextField6.setBorder(null);
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(51, 51, 51));
        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 255, 255));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField7.setText("Address:");
        jTextField7.setBorder(null);
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(51, 51, 51));
        jTextField8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(255, 255, 255));
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField8.setText("Email:");
        jTextField8.setBorder(null);
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        gender1.setEditable(false);
        gender1.setBackground(new java.awt.Color(51, 51, 51));
        gender1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        gender1.setForeground(new java.awt.Color(255, 255, 255));
        gender1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gender1.setText("Gender:");
        gender1.setBorder(null);
        gender1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gender1ActionPerformed(evt);
            }
        });

        fillbtn.setBackground(new java.awt.Color(255, 102, 0));
        fillbtn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        fillbtn.setForeground(new java.awt.Color(255, 255, 255));
        fillbtn.setText("F I L L");
        fillbtn.setBorder(null);
        fillbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillbtnActionPerformed(evt);
            }
        });

        fnamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnamefieldActionPerformed(evt);
            }
        });

        addressfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressfieldActionPerformed(evt);
            }
        });

        buttonGroup2.add(radio1);
        radio1.setForeground(new java.awt.Color(255, 255, 255));
        radio1.setSelected(true);
        radio1.setText("Male");
        radio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(radio2);
        radio2.setForeground(new java.awt.Color(255, 255, 255));
        radio2.setText("Female");
        radio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio2ActionPerformed(evt);
            }
        });

        lnamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnamefieldActionPerformed(evt);
            }
        });

        numberfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberfieldActionPerformed(evt);
            }
        });

        removebtn.setBackground(new java.awt.Color(255, 102, 0));
        removebtn.setForeground(new java.awt.Color(255, 255, 255));
        removebtn.setText("R E M O V E");
        removebtn.setBorder(null);
        removebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removebtnActionPerformed(evt);
            }
        });

        addbtn.setBackground(new java.awt.Color(255, 102, 0));
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("A D D");
        addbtn.setBorder(null);
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(255, 102, 0));
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("U P D A T E");
        updatebtn.setBorder(null);
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        jTextField10.setEditable(false);
        jTextField10.setBackground(new java.awt.Color(51, 51, 51));
        jTextField10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(255, 255, 255));
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField10.setText("Password:");
        jTextField10.setBorder(null);
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/back_white.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(addbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(addradio, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateradio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeradio))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fillbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(gender1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lnamefield)
                            .addComponent(numberfield)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(radio1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radio2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(emailfield)
                            .addComponent(addressfield)
                            .addComponent(passwordfield)
                            .addComponent(fnamefield)))
                    .addComponent(jLabel9))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeradio)
                    .addComponent(updateradio)
                    .addComponent(addradio))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fillbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio1)
                    .addComponent(radio2)
                    .addComponent(gender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(102, 102, 102));
        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("M A N A G E  S T U D E N T S");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        table.setBackground(new java.awt.Color(204, 204, 204));
        table.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        table.setForeground(new java.awt.Color(51, 51, 51));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Student I.D", "First name", "Last name", "Phone No.", "Address", "Email", "Gender", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setGridColor(new java.awt.Color(51, 51, 51));
        table.setRowHeight(30);
        table.setShowHorizontalLines(true);
        table.setShowVerticalLines(true);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(0).setPreferredWidth(140);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(1).setPreferredWidth(200);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(2).setPreferredWidth(200);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(3).setPreferredWidth(250);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(4).setPreferredWidth(300);
            table.getColumnModel().getColumn(5).setResizable(false);
            table.getColumnModel().getColumn(5).setPreferredWidth(300);
            table.getColumnModel().getColumn(6).setResizable(false);
            table.getColumnModel().getColumn(6).setPreferredWidth(150);
            table.getColumnModel().getColumn(7).setResizable(false);
            table.getColumnModel().getColumn(7).setPreferredWidth(200);
        }

        searchbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbarActionPerformed(evt);
            }
        });

        combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "< Search By : >", "Student I.D", "First Name", "Last Name", "Gender", "Phone No.", "Address", "Email", "All Students" }));

        searchbutton.setBackground(new java.awt.Color(255, 102, 0));
        searchbutton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchbutton.setForeground(new java.awt.Color(255, 255, 255));
        searchbutton.setText("S E A R C H");
        searchbutton.setBorder(null);
        searchbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbuttonActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/cross.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setRolloverEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(205, 205, 205)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 30, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 50, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateradioActionPerformed
        try {
            printtable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        fnamefield.setEnabled(true);

        idfield.setText("");
        fnamefield.setText("");
        lnamefield.setText("");
        radio1.setSelected(false);
        radio2.setSelected(false);
        numberfield.setText("");
        addressfield.setText("");
        emailfield.setText("");
        passwordfield.setText("");

        addbtn.setEnabled(true);
        updatebtn.setEnabled(true);
        removebtn.setEnabled(true);
        idfield.setEnabled(true);
        fillbtn.setEnabled(true);
        fnamefield.setEnabled(true);
        lnamefield.setEnabled(true);
        numberfield.setEnabled(true);
        addressfield.setEnabled(true);
        emailfield.setEnabled(true);
        passwordfield.setEnabled(true);

        addbtn.setEnabled(false);
        removebtn.setEnabled(false);
        fnamefield.setEditable(true);
        lnamefield.setEditable(true);
        numberfield.setEditable(true);
        emailfield.setEditable(true);
        passwordfield.setEditable(true);
        addressfield.setEditable(true);

    }//GEN-LAST:event_updateradioActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void removeradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeradioActionPerformed
        fnamefield.setEnabled(true);
        lnamefield.setEnabled(true);
        numberfield.setEnabled(true);
        addressfield.setEnabled(true);
        emailfield.setEnabled(true);
        passwordfield.setEnabled(true);
        try {
            printtable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        idfield.setText("");
        fnamefield.setText("");
        lnamefield.setText("");
        radio1.setSelected(false);
        radio2.setSelected(false);
        numberfield.setText("");
        addressfield.setText("");
        emailfield.setText("");
        passwordfield.setText("");
        addbtn.setEnabled(true);
        updatebtn.setEnabled(true);
        removebtn.setEnabled(true);
        idfield.setEnabled(true);
        fillbtn.setEnabled(true);

        addbtn.setEnabled(false);
        updatebtn.setEnabled(false);
        fnamefield.setEditable(false);
        lnamefield.setEditable(false);
        numberfield.setEditable(false);
        emailfield.setEditable(false);
        passwordfield.setEditable(false);
        addressfield.setEditable(false);
    }//GEN-LAST:event_removeradioActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void gender1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gender1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gender1ActionPerformed

    private void fillbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillbtnActionPerformed

        if (idfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Student I.D first.");
        } else {
            Cipher cipher = new Cipher();
            String query = "SELECT * FROM student WHERE student_id = '" + cipher.encode(idfield.getText()) + "'";
            try {
                Connection con = ConnectionProvider.getconnection();
                Statement statement = con.createStatement();
                ResultSet result = statement.executeQuery(query);
                if (result.next()) {
                    fnamefield.setText(cipher.decode(result.getString("student_fname")));
                    lnamefield.setText(cipher.decode(result.getString("student_lname")));
                    numberfield.setText(cipher.decode(result.getString("student_phone")));
                    addressfield.setText(cipher.decode(result.getString("student_address")));
                    emailfield.setText(cipher.decode(result.getString("student_email")));
                    String b = cipher.decode(result.getString("student_sex"));
                    if (b.equals("Male")) {
                        radio1.setSelected(true);
                    } else if (b.equals("Female")) {
                        radio2.setSelected(true);
                    }
                    passwordfield.setText(cipher.decode(result.getString("student_password")));

                } else {
                    JOptionPane.showMessageDialog(this, "This student is not registered !!!");
                }
                con.close();
                statement.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Something Went Wrong !!!");
            }
        }
    }//GEN-LAST:event_fillbtnActionPerformed

    private void removebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removebtnActionPerformed
        if (idfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Student I.D first.");
        } else {
            String b = "";
            if (radio1.isSelected()) {
                b = "Male";

            } else if (radio2.isSelected()) {
                b = "Female";
            }

            Student s1 = new Student(fnamefield.getText(), lnamefield.getText(), numberfield.getText(), addressfield.getText(), emailfield.getText(), b, passwordfield.getText());
            s1.setstudentid(idfield.getText());
            try {
                s1.removestudent();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
            try {
                printtable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
            JOptionPane.showMessageDialog(this, "Student " + idfield.getText() + " is Removed.");
            idfield.setText("");
            fnamefield.setText("");
            lnamefield.setText("");
            radio1.setSelected(false);
            radio2.setSelected(false);
            numberfield.setText("");
            addressfield.setText("");
            emailfield.setText("");
            passwordfield.setText("");
        }
    }//GEN-LAST:event_removebtnActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        if (fnamefield.getText().equals("") || lnamefield.getText().equals("") || numberfield.getText().equals("") || addressfield.getText().equals("") || emailfield.getText().equals("") || passwordfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "All Fields Should be Filled!");
        } else {
            boolean val1 = false;
            boolean val2 = false;
            boolean val3 = false;
            boolean val4 = false;
            boolean val5 = false;
            if (emailfield.getText().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                val1 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Email should be in this format\ncentrallibrary@gmail.com");
            }
            if (fnamefield.getText().matches("^[A-Za-z. ]*$") && lnamefield.getText().matches("^[A-Za-z. ]*$")) {
                val2 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Name Field can only contain a-z or period( . )");
            }
            if (numberfield.getText().matches("^[0-9]*$")) {
                val3 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Phone Number field can only contain 0-9");
            }
            if (numberfield.getText().length() == 11) {
                val5 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Phone Number Should Contain 11 numbers.");
            }
            if (passwordfield.getText().length() < 6) {
                JOptionPane.showMessageDialog(this, "Password Should Contain atleast 6 characters.");
            } else {
                val4 = true;
            }
            if (val1 && val2 && val3 && val4 && val5) {
                try {
                    add();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
        }

    }//GEN-LAST:event_addbtnActionPerformed
    public void add() throws SQLException {
        String gender = "Male";
        Student s1 = new Student(fnamefield.getText(), lnamefield.getText(), numberfield.getText(), addressfield.getText(), emailfield.getText(), gender, passwordfield.getText());
        if (radio1.isSelected()) {
            s1.setgender("Male");
        }
        if (radio2.isSelected()) {
            s1.setgender("Female");
        }
        s1.addstudent();
        printtable();
        idfield.setText("");
        fnamefield.setText("");
        lnamefield.setText("");
        radio1.setSelected(false);
        radio2.setSelected(false);
        numberfield.setText("");
        addressfield.setText("");
        emailfield.setText("");
        passwordfield.setText("");
    }
    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        if (fnamefield.getText().equals("") || lnamefield.getText().equals("") || numberfield.getText().equals("") || addressfield.getText().equals("") || emailfield.getText().equals("") || passwordfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "All Fields Should be Filled!");
        } else {
            boolean val1 = false;
            boolean val2 = false;
            boolean val3 = false;
            boolean val4 = false;
            boolean val5 = false;
            if (emailfield.getText().matches("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
                val1 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Email should be in this format\ncentrallibrary@gmail.com");
            }
            if (fnamefield.getText().matches("^[A-Za-z. ]*$") && lnamefield.getText().matches("^[A-Za-z. ]*$")) {
                val2 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Name Field can only contain a-z or period( . )");
            }
            if (numberfield.getText().matches("^[0-9]*$")) {
                val3 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Phone Number field can only contain 0-9");
            }
            if (numberfield.getText().length() == 11) {
                val5 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Phone Number Should Contain 11 numbers.");
            }
            if (passwordfield.getText().length() < 6) {
                JOptionPane.showMessageDialog(this, "Password Should Contain atleast 6 characters.");
            } else {
                val4 = true;
            }
            if (val1 && val2 && val3 && val4 && val5) {
                try {
                    update();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
        }
    }//GEN-LAST:event_updatebtnActionPerformed
    public void update() throws SQLException {
        String b = "";
        if (radio1.isSelected()) {
            b = "Male";

        } else if (radio2.isSelected()) {
            b = "Female";
        }
        Student s1 = new Student(fnamefield.getText(), lnamefield.getText(), numberfield.getText(), addressfield.getText(), emailfield.getText(), b, passwordfield.getText());
        s1.setstudentid(idfield.getText());
        try {
            s1.updatestudent();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        try {
            printtable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        JOptionPane.showMessageDialog(this, "Updated.");
        idfield.setText("");
        fnamefield.setText("");
        lnamefield.setText("");
        radio1.setSelected(false);
        radio2.setSelected(false);
        numberfield.setText("");
        addressfield.setText("");
        emailfield.setText("");
        passwordfield.setText("");
    }
    private void lnamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnamefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnamefieldActionPerformed

    private void radio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio2ActionPerformed

    private void addradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addradioActionPerformed
        fnamefield.setEditable(true);
        lnamefield.setEditable(true);
        numberfield.setEditable(true);
        emailfield.setEditable(true);
        passwordfield.setEditable(true);
        addressfield.setEditable(true);
        try {
            printtable();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        idfield.setText("");
        fnamefield.setText("");
        lnamefield.setText("");
        radio1.setSelected(false);
        radio2.setSelected(false);
        numberfield.setText("");
        addressfield.setText("");
        emailfield.setText("");
        passwordfield.setText("");
        idfield.setEnabled(true);
        fnamefield.setEnabled(true);
        lnamefield.setEnabled(true);
        numberfield.setEnabled(true);
        addressfield.setEnabled(true);
        emailfield.setEnabled(true);
        passwordfield.setEnabled(true);
        addbtn.setEnabled(true);
        updatebtn.setEnabled(false);
        removebtn.setEnabled(false);
        idfield.setEnabled(false);
        fillbtn.setEnabled(false);
    }//GEN-LAST:event_addradioActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed

    }//GEN-LAST:event_jTextField10ActionPerformed

    private void radio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio1ActionPerformed

    private void addressfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressfieldActionPerformed

    private void numberfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberfieldActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void searchbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbuttonActionPerformed
        String query = "";
        Cipher cipher = new Cipher();
        if (searchbar.getText().equals("") && combobox.getSelectedIndex() != 8) {
            JOptionPane.showMessageDialog(this, "Please Fill Search Bar!!!");
        } else {
            if (combobox.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Please Select Option To Filter Result!!!");
            } else {
                if (combobox.getSelectedIndex() == 1) {
                    query = "SELECT student_id,student_fname,student_lname,student_phone,student_address,student_email,student_sex,student_password FROM  student WHERE student_id='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 2) {
                    query = "SELECT student_id,student_fname,student_lname,student_phone,student_address,student_email,student_sex,student_password FROM  student WHERE student_fname='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 3) {
                    query = "SELECT student_id,student_fname,student_lname,student_phone,student_address,student_email,student_sex,student_password FROM  student WHERE student_lname='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 4) {
                    query = "SELECT student_id,student_fname,student_lname,student_phone,student_address,student_email,student_sex,student_password FROM  student WHERE student_sex='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 5) {
                    query = "SELECT student_id,student_fname,student_lname,student_phone,student_address,student_email,student_sex,student_password FROM  student WHERE student_phone='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 6) {
                    query = "SELECT student_id,student_fname,student_lname,student_phone,student_address,student_email,student_sex,student_password FROM  student WHERE student_address='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 7) {
                    query = "SELECT student_id,student_fname,student_lname,student_phone,student_address,student_email,student_sex,student_password FROM  student WHERE student_email='" + cipher.encode(searchbar.getText()) + "'";
                }

            }
        }
        if (combobox.getSelectedIndex() == 8) {
            query = "SELECT student_id,student_fname,student_lname,student_phone,student_address,student_email,student_sex,student_password FROM  student";
        }
        try {
            printtable1(query);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        searchbar.setText("");
    }//GEN-LAST:event_searchbuttonActionPerformed

    private void searchbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbarActionPerformed

    }//GEN-LAST:event_searchbarActionPerformed

    private void fnamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnamefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnamefieldActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        LibrarianDashboard ld;
        try {
            ld = new LibrarianDashboard();
            ld.show();
            dispose();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }//GEN-LAST:event_jLabel9MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();    }//GEN-LAST:event_jButton2ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        fnamefield.setEditable(true);
        lnamefield.setEditable(true);
        numberfield.setEditable(true);
        emailfield.setEditable(true);
        passwordfield.setEditable(true);
        addressfield.setEditable(true);
        int row = table.getSelectedRow();
        TableModel model = table.getModel();
        idfield.setText(model.getValueAt(row, 0).toString());
        fnamefield.setText(model.getValueAt(row, 1).toString());
        lnamefield.setText(model.getValueAt(row, 2).toString());
        numberfield.setText(model.getValueAt(row, 3).toString());
        addressfield.setText(model.getValueAt(row, 4).toString());
        emailfield.setText(model.getValueAt(row, 5).toString());
        char gender = (model.getValueAt(row, 6).toString()).charAt(0);
        if (gender == 'M') {
            radio1.setSelected(true);
        } else if (gender == 'F') {
            radio2.setSelected(true);
        }
        passwordfield.setText(model.getValueAt(row, 7).toString());
     }//GEN-LAST:event_tableMouseClicked

    private void idfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idfieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ManageStudent().setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        });
    }

    public void printtable() throws SQLException {
        Cipher c1 = new Cipher();
        Connection con = ConnectionProvider.getconnection();
        Statement statement = con.createStatement();
        try {
            String query2 = "SELECT * FROM  student ";
            ResultSet result2 = statement.executeQuery(query2);
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            while (result2.next()) {
                model.addRow(new String[]{c1.decode(Integer.toString(result2.getInt(1))), c1.decode(result2.getString(2)), c1.decode(result2.getString(3)), c1.decode(result2.getString(4)), c1.decode(result2.getString(5)), c1.decode(result2.getString(6)), c1.decode(result2.getString(7)), c1.decode(result2.getString(8))});
            }
            if (model.getRowCount() < 15) {
                model.setRowCount(15);
            }
        } catch (Exception e) {
        } finally {
            con.close();
            statement.close();
        }
    }

    public void printtable1(String a) throws SQLException {
        Cipher c1 = new Cipher();
        Connection con = ConnectionProvider.getconnection();
        Statement statement = con.createStatement();
        try {

            String query2 = a;
            ResultSet result2 = statement.executeQuery(query2);
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);

            while (result2.next()) {
                model.addRow(new String[]{c1.decode(Integer.toString(result2.getInt(1))), c1.decode(result2.getString(2)), c1.decode(result2.getString(3)), c1.decode(result2.getString(4)), c1.decode(result2.getString(5)), c1.decode(result2.getString(6)), c1.decode(result2.getString(7)), c1.decode(result2.getString(8))});
            }

            if (model.getRowCount() < 15) {
                model.setRowCount(15);
            }

        } catch (Exception e) {
        } finally {
            con.close();
            statement.close();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JRadioButton addradio;
    private javax.swing.JTextField addressfield;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JTextField emailfield;
    private javax.swing.JButton fillbtn;
    private javax.swing.JTextField fnamefield;
    private javax.swing.JTextField gender1;
    private javax.swing.JTextField idfield;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField lnamefield;
    private javax.swing.JTextField numberfield;
    private javax.swing.JTextField passwordfield;
    private javax.swing.JRadioButton radio1;
    private javax.swing.JRadioButton radio2;
    private javax.swing.JButton removebtn;
    private javax.swing.JRadioButton removeradio;
    private javax.swing.JTextField searchbar;
    private javax.swing.JButton searchbutton;
    private javax.swing.JTable table;
    private javax.swing.JButton updatebtn;
    private javax.swing.JRadioButton updateradio;
    // End of variables declaration//GEN-END:variables
}
