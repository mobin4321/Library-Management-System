package project;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

public class ManageBooks extends javax.swing.JFrame {

    public ManageBooks() throws SQLException {
        initComponents();
        ManageLibParks lp = new ManageLibParks();
        lp.timechecker();
        Vip v = new Vip();
        v.vipended();
        Defaulter d = new Defaulter();
        d.addstudent();
        idfield.setEnabled(false);
        fillbtn.setEnabled(false);
        removebtn.setEnabled(false);
        updatebtn.setEnabled(false);
        printtable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        addradio = new javax.swing.JRadioButton();
        updateradio = new javax.swing.JRadioButton();
        removeradio = new javax.swing.JRadioButton();
        jTextField2 = new javax.swing.JTextField();
        idfield = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        fillbtn = new javax.swing.JButton();
        titlefield = new javax.swing.JTextField();
        quantityfield = new javax.swing.JTextField();
        authorfield = new javax.swing.JTextField();
        genrefield = new javax.swing.JTextField();
        shelffield = new javax.swing.JTextField();
        removebtn = new javax.swing.JButton();
        addbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        jTextField10 = new javax.swing.JTextField();
        rowfield = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        searchbar = new javax.swing.JTextField();
        combobox = new javax.swing.JComboBox<>();
        searchbutton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(252, 134, 54), 3));

        buttonGroup1.add(addradio);
        addradio.setForeground(new java.awt.Color(255, 255, 255));
        addradio.setSelected(true);
        addradio.setText("A D D");
        addradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addradioActionPerformed(evt);
            }
        });

        buttonGroup1.add(updateradio);
        updateradio.setForeground(new java.awt.Color(255, 255, 255));
        updateradio.setText("U P D A T E");
        updateradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateradioActionPerformed(evt);
            }
        });

        buttonGroup1.add(removeradio);
        removeradio.setForeground(new java.awt.Color(255, 255, 255));
        removeradio.setText("R E M O V E");
        removeradio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeradioActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(51, 51, 51));
        jTextField2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("Author:");
        jTextField2.setBorder(null);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(51, 51, 51));
        jTextField4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(255, 255, 255));
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField4.setText("Book I.D:");
        jTextField4.setBorder(null);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.setEditable(false);
        jTextField5.setBackground(new java.awt.Color(51, 51, 51));
        jTextField5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(255, 255, 255));
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField5.setText("Book Title:");
        jTextField5.setBorder(null);
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(51, 51, 51));
        jTextField6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(255, 255, 255));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField6.setText("Genre:");
        jTextField6.setBorder(null);
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(51, 51, 51));
        jTextField7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(255, 255, 255));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField7.setText("Quantity:");
        jTextField7.setBorder(null);
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(51, 51, 51));
        jTextField8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(255, 255, 255));
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField8.setText("Shelf:");
        jTextField8.setBorder(null);
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        fillbtn.setBackground(new java.awt.Color(255, 102, 0));
        fillbtn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        fillbtn.setForeground(new java.awt.Color(255, 255, 255));
        fillbtn.setText("F I L L");
        fillbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillbtnActionPerformed(evt);
            }
        });

        quantityfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityfieldActionPerformed(evt);
            }
        });

        authorfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorfieldActionPerformed(evt);
            }
        });

        genrefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genrefieldActionPerformed(evt);
            }
        });

        shelffield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shelffieldActionPerformed(evt);
            }
        });

        removebtn.setBackground(new java.awt.Color(255, 102, 0));
        removebtn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        removebtn.setForeground(new java.awt.Color(255, 255, 255));
        removebtn.setText("R E M O V E");
        removebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removebtnActionPerformed(evt);
            }
        });

        addbtn.setBackground(new java.awt.Color(255, 102, 0));
        addbtn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("A D D");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(255, 102, 0));
        updatebtn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("U P D A T E");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        jTextField10.setEditable(false);
        jTextField10.setBackground(new java.awt.Color(51, 51, 51));
        jTextField10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(255, 255, 255));
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField10.setText("Shelf Row:");
        jTextField10.setBorder(null);
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/back_white.png"))); // NOI18N
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(addradio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateradio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeradio))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(authorfield, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genrefield, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantityfield, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(shelffield, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rowfield, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(fillbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(titlefield, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updatebtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removebtn)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeradio)
                    .addComponent(updateradio)
                    .addComponent(addradio))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fillbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titlefield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genrefield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shelffield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rowfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(102, 102, 102));
        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("M A N A G E  B O O K S");
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        table.setBackground(new java.awt.Color(204, 204, 204));
        table.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        table.setForeground(new java.awt.Color(51, 51, 51));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Book_I.D", "Title", "Author", "Genre", "Quantity", "Shelf no.", "Row no."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setGridColor(new java.awt.Color(51, 51, 51));
        table.setRowHeight(30);
        table.setShowHorizontalLines(true);
        table.setShowVerticalLines(true);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(0).setPreferredWidth(100);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(1).setPreferredWidth(300);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(2).setPreferredWidth(300);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(3).setPreferredWidth(200);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(4).setPreferredWidth(100);
            table.getColumnModel().getColumn(5).setResizable(false);
            table.getColumnModel().getColumn(5).setPreferredWidth(100);
            table.getColumnModel().getColumn(6).setResizable(false);
            table.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        searchbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbarActionPerformed(evt);
            }
        });

        combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "< Search By : >", "Book I.D", "Book Name", "Book Author", "Book Genre", "Book Quantity", "Book Shelf", "Book Row", "All Books" }));
        combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxActionPerformed(evt);
            }
        });

        searchbutton.setBackground(new java.awt.Color(255, 102, 0));
        searchbutton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchbutton.setForeground(new java.awt.Color(255, 255, 255));
        searchbutton.setText("S E A R C H");
        searchbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbuttonActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images/cross.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setRolloverEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchbutton)))
                        .addGap(149, 149, 149)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(26, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateradioActionPerformed

        updatebtn.setEnabled(true);
        addbtn.setEnabled(false);
        removebtn.setEnabled(false);
        idfield.setEnabled(true);
        fillbtn.setEnabled(true);
        titlefield.setEnabled(true);
        authorfield.setEnabled(true);
        genrefield.setEnabled(true);
        quantityfield.setEnabled(true);
        shelffield.setEnabled(true);
        rowfield.setEnabled(true);

        idfield.setText("");
        titlefield.setText("");
        authorfield.setText("");
        genrefield.setText("");
        shelffield.setText("");
        rowfield.setText("");
        quantityfield.setText("");

        titlefield.setEditable(true);
        authorfield.setEditable(true);
        genrefield.setEditable(true);
        shelffield.setEditable(true);
        rowfield.setEditable(true);
        quantityfield.setEditable(true);

    }//GEN-LAST:event_updateradioActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void removeradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeradioActionPerformed

        idfield.setText("");
        titlefield.setText("");
        authorfield.setText("");
        genrefield.setText("");
        shelffield.setText("");
        rowfield.setText("");
        quantityfield.setText("");

        removebtn.setEnabled(true);
        idfield.setEnabled(true);
        fillbtn.setEnabled(true);
        addbtn.setEnabled(false);
        updatebtn.setEnabled(false);

        titlefield.setEditable(false);
        authorfield.setEditable(false);
        genrefield.setEditable(false);
        shelffield.setEditable(false);
        rowfield.setEditable(false);
        quantityfield.setEditable(false);
    }//GEN-LAST:event_removeradioActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void fillbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillbtnActionPerformed
        if (idfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Book I.D first.");
        } else {
            Cipher cipher = new Cipher();
            String query = "SELECT * FROM books WHERE book_id = '" + cipher.encode(idfield.getText()) + "'";
            try {
                Connection con = ConnectionProvider.getconnection();
                Statement statement = con.createStatement();
                ResultSet result = statement.executeQuery(query);
                if (result.next()) {
                    titlefield.setText(cipher.decode(result.getString("book_name")));
                    authorfield.setText(cipher.decode(result.getString("book_author")));
                    genrefield.setText(cipher.decode(result.getString("book_genre")));
                    quantityfield.setText(cipher.decode(result.getString("book_quantity")));
                    shelffield.setText(cipher.decode(result.getString("book_shelf")));
                    rowfield.setText(cipher.decode(result.getString("shelf_row")));
                } else {
                    JOptionPane.showMessageDialog(this, "This book is not registered.");
                }
                con.close();
                statement.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Something Went Wrong !");
            }
        }
    }//GEN-LAST:event_fillbtnActionPerformed

    private void removebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removebtnActionPerformed
        if (idfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Enter Book I.D first.");
        } else {
            Book s1 = new Book(titlefield.getText(), authorfield.getText(), genrefield.getText(), Integer.parseInt(quantityfield.getText()), Integer.parseInt(shelffield.getText()), Integer.parseInt(rowfield.getText()));
            s1.setbookid(idfield.getText());
            try {
                s1.removebook();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
            printtable();
            idfield.setText("");
            titlefield.setText("");
            authorfield.setText("");
            genrefield.setText("");
            shelffield.setText("");
            rowfield.setText("");
            quantityfield.setText("");
        }
    }//GEN-LAST:event_removebtnActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        if (titlefield.getText().equals("") || authorfield.getText().equals("") || quantityfield.getText().equals("") || genrefield.getText().equals("") || shelffield.getText().equals("") || rowfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "All Fields Should be Filled.");
        } else {
            boolean val1 = false;
            boolean val2 = false;
            boolean val3 = false;
            boolean val4 = false;
            boolean val5 = false;
            boolean val6 = false;
            boolean val7 = false;
            if (titlefield.getText().matches("^[A-Za-z.0-9 ]*$")) {
                val7 = true;
            } else {
                JOptionPane.showMessageDialog(this, "'Book Title' Field can only contain a-z or period( . ) or numbers");
            }
            if (authorfield.getText().matches("^[A-Za-z. ]*$")) {
                val1 = true;
            } else {
                JOptionPane.showMessageDialog(this, "'Author Name' Field can only contain a-z or period( . )");
            }
            if (genrefield.getText().matches("^[A-Za-z ]*$")) {
                val2 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Genre Field can only contain a-z ");
            }
            if (quantityfield.getText().matches("^[0-9]*$")) {
                val3 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Quantity Field can only contain 0-9 ");
            }
            if (Integer.parseInt(quantityfield.getText()) < 20) {
                val6 = true;
            } else {
                JOptionPane.showMessageDialog(this, "You can add atmost 20 books at a time.");
            }
            if (shelffield.getText().matches("^[0-9]*$")) {
                val4 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Shelf Field can only contain 0-9 ");
            }
            if (rowfield.getText().matches("^[0-9]*$")) {
                val5 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Row Field can only contain 0-9 ");
            }
            if (val1 && val2 && val3 && val4 && val5 && val6 && val7) {
                try {
                    add();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
        }

    }//GEN-LAST:event_addbtnActionPerformed
    public void add() throws SQLException {
        Book s1 = new Book(titlefield.getText(), authorfield.getText(), genrefield.getText(), Integer.parseInt(quantityfield.getText()), Integer.parseInt(shelffield.getText()), Integer.parseInt(rowfield.getText()));
        s1.addbook();
        printtable();
        idfield.setText("");
        titlefield.setText("");
        authorfield.setText("");
        genrefield.setText("");
        shelffield.setText("");
        rowfield.setText("");
        quantityfield.setText("");
    }
    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        if (titlefield.getText().equals("") || authorfield.getText().equals("") || quantityfield.getText().equals("") || genrefield.getText().equals("") || shelffield.getText().equals("") || rowfield.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "All Fields Should be Filled.");
        } else {
            boolean val1 = false;
            boolean val2 = false;
            boolean val3 = false;
            boolean val4 = false;
            boolean val5 = false;
            boolean val6 = false;
            boolean val7 = false;
            if (titlefield.getText().matches("^[A-Za-z.0-9 ]*$")) {
                val7 = true;
            } else {
                JOptionPane.showMessageDialog(this, "'Book Title' Field can only contain a-z or period( . ) or numbers");
            }
            if (authorfield.getText().matches("^[A-Za-z. ]*$")) {
                val1 = true;
            } else {
                JOptionPane.showMessageDialog(this, "'Author Name' Field can only contain a-z or period( . )");
            }
            if (genrefield.getText().matches("^[A-Za-z ]*$")) {
                val2 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Genre Field can only contain a-z ");
            }
            if (quantityfield.getText().matches("^[0-9]*$")) {
                val3 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Quantity Field can only contain 0-9 ");
            }
            if (Integer.parseInt(quantityfield.getText()) < 20) {
                val6 = true;
            } else {
                JOptionPane.showMessageDialog(this, "You can add atmost 20 books at a time.");
            }
            if (shelffield.getText().matches("^[0-9]*$")) {
                val4 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Shelf Field can only contain 0-9 ");
            }
            if (rowfield.getText().matches("^[0-9]*$")) {
                val5 = true;
            } else {
                JOptionPane.showMessageDialog(this, "Row Field can only contain 0-9 ");
            }
            if (val1 && val2 && val3 && val4 && val5 && val6 && val7) {
                try {
                    update();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
        }
    }//GEN-LAST:event_updatebtnActionPerformed
    public void update() throws SQLException {
        Book s1 = new Book(titlefield.getText(), authorfield.getText(), genrefield.getText(), Integer.parseInt(quantityfield.getText()), Integer.parseInt(shelffield.getText()), Integer.parseInt(rowfield.getText()));
        s1.setbookid(idfield.getText());
        try {
            s1.updatebook();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        printtable();
        idfield.setText("");
        titlefield.setText("");
        authorfield.setText("");
        genrefield.setText("");
        shelffield.setText("");
        rowfield.setText("");
        quantityfield.setText("");
    }
    private void authorfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorfieldActionPerformed
    }//GEN-LAST:event_authorfieldActionPerformed

    private void addradioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addradioActionPerformed
        printtable();
        idfield.setText("");
        titlefield.setText("");
        authorfield.setText("");
        genrefield.setText("");
        shelffield.setText("");
        rowfield.setText("");
        quantityfield.setText("");

        titlefield.setEnabled(true);
        authorfield.setEnabled(true);
        genrefield.setEnabled(true);
        quantityfield.setEnabled(true);
        shelffield.setEnabled(true);
        rowfield.setEnabled(true);
        addbtn.setEnabled(true);
        updatebtn.setEnabled(false);
        removebtn.setEnabled(false);
        idfield.setEnabled(false);
        fillbtn.setEnabled(false);

        titlefield.setEditable(true);
        authorfield.setEditable(true);
        genrefield.setEditable(true);
        shelffield.setEditable(true);
        rowfield.setEditable(true);
        quantityfield.setEditable(true);
    }//GEN-LAST:event_addradioActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed

    }//GEN-LAST:event_jTextField10ActionPerformed

    private void quantityfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityfieldActionPerformed

    private void genrefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genrefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genrefieldActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void searchbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbuttonActionPerformed
        String query = "";
        Cipher cipher = new Cipher();
        if (searchbar.getText().equals("") && combobox.getSelectedIndex() != 8) {
            JOptionPane.showMessageDialog(this, "Please Fill Search Bar.");
        } else {
            if (combobox.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Please Select Option To Filter Result.");
            } else {
                if (combobox.getSelectedIndex() == 1) {
                    query = "SELECT book_id,book_name,book_author,book_genre,book_quantity,book_shelf,shelf_row FROM  books WHERE book_id='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 2) {
                    query = "SELECT book_id,book_name,book_author,book_genre,book_quantity,book_shelf,shelf_row FROM  books WHERE book_name='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 3) {
                    query = "SELECT book_id,book_name,book_author,book_genre,book_quantity,book_shelf,shelf_row FROM  books WHERE book_author='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 4) {
                    query = "SELECT book_id,book_name,book_author,book_genre,book_quantity,book_shelf,shelf_row FROM  books WHERE book_genre='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 5) {
                    query = "SELECT book_id,book_name,book_author,book_genre,book_quantity,book_shelf,shelf_row FROM  books WHERE book_quantity='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 6) {
                    query = "SELECT book_id,book_name,book_author,book_genre,book_quantity,book_shelf,shelf_row FROM  books WHERE book_shelf='" + cipher.encode(searchbar.getText()) + "'";
                }
                if (combobox.getSelectedIndex() == 7) {
                    query = "SELECT book_id,book_name,book_author,book_genre,book_quantity,book_shelf,shelf_row FROM  books WHERE shelf_row='" + cipher.encode(searchbar.getText()) + "'";
                }
            }
        }
        if (combobox.getSelectedIndex() == 8) {
            query = "SELECT book_id,book_name,book_author,book_genre,book_quantity,book_shelf,shelf_row FROM  books";
        }
        printtable1(query);
        searchbar.setText("");
    }//GEN-LAST:event_searchbuttonActionPerformed

    private void searchbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbarActionPerformed

    }//GEN-LAST:event_searchbarActionPerformed

    private void shelffieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shelffieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shelffieldActionPerformed

    private void comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboboxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        LibrarianDashboard ld;
        try {
            ld = new LibrarianDashboard();
            ld.show();
            dispose();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }

    }//GEN-LAST:event_jLabel9MouseClicked

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int row = table.getSelectedRow();
        TableModel model = table.getModel();
        idfield.setText(model.getValueAt(row, 0).toString());
        titlefield.setText(model.getValueAt(row, 1).toString());
        authorfield.setText(model.getValueAt(row, 2).toString());
        genrefield.setText(model.getValueAt(row, 3).toString());
        quantityfield.setText(model.getValueAt(row, 4).toString());
        shelffield.setText(model.getValueAt(row, 5).toString());
        rowfield.setText(model.getValueAt(row, 6).toString());

    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ManageBooks().setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        });
    }

    public void printtable() {
        try {
            Cipher c1 = new Cipher();
            Connection con = ConnectionProvider.getconnection();
            Statement statement = con.createStatement();
            String query2 = "SELECT * FROM  books ";
            ResultSet result2 = statement.executeQuery(query2);
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);

            while (result2.next()) {
                model.addRow(new String[]{c1.decode(Integer.toString(result2.getInt(1))), c1.decode(result2.getString(2)), c1.decode(result2.getString(3)), c1.decode(result2.getString(4)), Integer.toString(result2.getInt(5)), Integer.toString(result2.getInt(6)), Integer.toString(result2.getInt(7))});
            }

            if (model.getRowCount() < 15) {
                model.setRowCount(15);
            }

        } catch (Exception e) {
        }
    }

    public void printtable1(String a) {
        try {
            Cipher c1 = new Cipher();
            Connection con = ConnectionProvider.getconnection();
            Statement statement = con.createStatement();
            String query2 = a;
            ResultSet result2 = statement.executeQuery(query2);
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);

            while (result2.next()) {
                model.addRow(new String[]{c1.decode(Integer.toString(result2.getInt(1))), c1.decode(result2.getString(2)), c1.decode(result2.getString(3)), c1.decode(result2.getString(4)), Integer.toString(result2.getInt(5)), Integer.toString(result2.getInt(6)), Integer.toString(result2.getInt(7))});
            }

            if (model.getRowCount() < 15) {
                model.setRowCount(15);
            }

        } catch (Exception e) {
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JRadioButton addradio;
    private javax.swing.JTextField authorfield;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JButton fillbtn;
    private javax.swing.JTextField genrefield;
    private javax.swing.JTextField idfield;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField quantityfield;
    private javax.swing.JButton removebtn;
    private javax.swing.JRadioButton removeradio;
    private javax.swing.JTextField rowfield;
    private javax.swing.JTextField searchbar;
    private javax.swing.JButton searchbutton;
    private javax.swing.JTextField shelffield;
    private javax.swing.JTable table;
    private javax.swing.JTextField titlefield;
    private javax.swing.JButton updatebtn;
    private javax.swing.JRadioButton updateradio;
    // End of variables declaration//GEN-END:variables
}
